{"version":3,"sources":["theme.js","Header.js","Pages/Projects.js","Pages/Work.js","Pages/Resume.js","Pages/About.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["theme","createMuiTheme","palette","primary","500","useStyles","makeStyles","name","position","navDisplayFlex","display","float","linkText","textDecoration","color","menuButton","drawer","top","navLink","textAlign","Header","navLinks","title","path","React","openDrawer","setOpenDrawer","handleDrawer","classes","MobileDrawer","props","ref","Drawer","paper","BackdropProps","invisible","anchor","open","onClose","variant","transitionDuration","ListItem","map","button","component","Link","to","className","onClick","ListItemText","AppBar","Toolbar","Typography","style","flex","Hidden","smDown","Container","maxWidth","navbarDisplayFlex","List","aria-labelledby","mdUp","IconButton","edge","aria-label","Menu","require","Projects","Work","Resume","About","App","ThemeProvider","CssBaseline","exact","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb5bcfa6.chunk.js","sourcesContent":["import { createMuiTheme }  from '@material-ui/core/styles'\nconst theme = createMuiTheme({\n  palette: {\n    primary: { 500: '#467fcf' },\n  },\n})\nexport default theme","import * as React from \"react\";\nimport {\n    AppBar,\n    Container,\n    Drawer,\n    Hidden,\n    IconButton,\n    List,\n    ListItem,\n    ListItemText,\n    Toolbar,\n    Typography,\n} from \"@material-ui/core\";\nimport { Menu as MenuIcon } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n    name: {\n      position: \"absolute\"\n    },\n    navDisplayFlex: {\n        display: `flex`,\n        float: `right`,\n    },\n    linkText: {\n        textDecoration: `none`,\n        color: `white`,\n    },\n    menuButton: {\n        color: `white`,\n        float: `right`,\n    },\n    drawer: {\n        top: \"64px\",\n    },\n    navLink: {\n        textAlign:'center'\n    }\n});\n\nconst Header = () => {\n    const navLinks = [\n        { title: \"projects\", path: \"/projects\" },\n        { title: \"work\", path: \"/work\" },\n        { title: \"resume\", path: \"/resume\" },\n        { title: \"about\", path: \"/about\" },\n    ];\n    const [openDrawer, setOpenDrawer] = React.useState(false);\n    const handleDrawer = () => {\n        setOpenDrawer(!openDrawer);\n    };\n    const classes = useStyles();\n\n    const MobileDrawer = React.forwardRef((props, ref) => (\n        <Drawer\n            classes={{ paper: classes.drawer }}\n            BackdropProps={{ invisible: true }}\n            anchor=\"top\"\n            open={props.open}\n            onClose={handleDrawer}\n            ref={ref}\n            variant=\"temporary\"\n            transitionDuration={4000}\n        >\n            <ListItem>\n                {navLinks.map(({ title, path }) => (\n                    <ListItem\n                    button\n                    component={Link}\n                    to={path}\n                    key={title}\n                    className={classes.navLink}\n                    onClick={handleDrawer}\n                >\n                    <ListItemText primary={title} />\n                </ListItem>\n                ))}\n            </ListItem>\n        </Drawer>\n    ));\n    return (\n        <div>\n            <AppBar position=\"sticky\">\n                <Toolbar>\n                  <Typography variant=\"h6\" className={classes.name}>Theresa Hsieh</Typography>\n                    <div style={{ flex: \"1 1 auto\" }}></div>\n                    <Hidden smDown>\n                        <Container\n                            maxWidth=\"md\"\n                            className={classes.navbarDisplayFlex}\n                        >\n                            <List\n                                component=\"nav\"\n                                aria-labelledby=\"main navigation\"\n                                className={classes.navDisplayFlex}\n                            >\n                                {navLinks.map(({ title, path }) => (\n                                    <ListItem\n                                        button\n                                        component={Link}\n                                        to={path}\n                                        key={title}\n                                    >\n                                        <ListItemText primary={title} />\n                                    </ListItem>\n                                ))}\n                            </List>\n                        </Container>\n                    </Hidden>\n                    <Hidden mdUp>\n                        <IconButton\n                            edge=\"start\"\n                            className={classes.menuButton}\n                            aria-label=\"menu\"\n                            onClick={handleDrawer}\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                    </Hidden>\n                </Toolbar>\n            </AppBar>\n            <MobileDrawer open={openDrawer} />\n        </div>\n    );\n};\nexport default Header;\n","const { Typography } = require(\"@material-ui/core\")\n\nconst Projects = () => {\n    return (\n    <div>\n      <Typography variant=\"h6\">projects</Typography>\n    </div>\n    );\n};\nexport default Projects;\n","const { Typography } = require(\"@material-ui/core\")\n\nconst Work = () => {\n    return (\n    <div>\n      <Typography variant=\"h6\">work</Typography>\n    </div>\n    );\n};\nexport default Work;\n","const { Typography } = require(\"@material-ui/core\")\n\nconst Resume = () => {\n    return (\n    <div>\n      <Typography variant=\"h6\">resume</Typography>\n    </div>\n    );\n};\nexport default Resume;\n","const { Typography } = require(\"@material-ui/core\")\n\nconst About = () => {\n    return (\n    <div>\n      <Typography variant=\"h6\">about</Typography>\n    </div>\n    );\n};\nexport default About;\n","import React from \"react\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport theme from \"./theme\";\nimport Header from \"./Header\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport Projects from \"./Pages/Projects.js\";\nimport Work from \"./Pages/Work.js\";\nimport Resume from \"./Pages/Resume.js\";\nimport About from \"./Pages/About.js\";\n\nconst App = () => (\n    <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <BrowserRouter>\n            <Header />\n            <Switch>\n                <Route exact path=\"/projects\" component={Projects} />\n                <Route exact path=\"/work\" component={Work} />\n                <Route exact path=\"/resume\" component={Resume} />\n                <Route exact path=\"/about\" component={About} />\n                <Route\n                    exact\n                    path=\"/\"\n                    render={() => {\n                        return <Redirect to=\"/projects\" />;\n                    }}\n                />\n            </Switch>\n        </BrowserRouter>\n    </ThemeProvider>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}